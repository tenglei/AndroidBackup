package com.example.androidtest;

import java.io.IOException;

import android.bluetooth.BluetoothDevice;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

public class BluetoothReceiver extends BroadcastReceiver {

	@Override
	public void onReceive(Context context, Intent intent) {
		// TODO Auto-generated method stub
		String action = intent.getAction();
        if(BluetoothDevice.ACTION_FOUND.equals(action))
        {   
                   BluetoothDevice bluetoothDevice = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                   System.out.println(bluetoothDevice.getName());
                   if (device.getName().equalsIgnoreCase(name)) {  
                       // 搜索蓝牙设备的过程占用资源比较多，一旦找到需要连接的设备后需要及时关闭搜索   
                       adapter.cancelDiscovery();  
                       // 获取蓝牙设备的连接状态   
                       connectState = device.getBondState();  
                       switch (connectState) {  
                           // 未配对   
                           case BluetoothDevice.BOND_NONE:  
                               // 配对   
                               try {  
                                   Method createBondMethod = BluetoothDevice.class.getMethod("createBond");  
                                   createBondMethod.invoke(device);  
                               } catch (Exception e) {   
                                   e.printStackTrace();  
                               }  
                               break;  
                           // 已配对   
                           case BluetoothDevice.BOND_BONDED:  
                               try {  
                                   // 连接   
                                   connect(device);  
                               } catch (IOException e) {  
                                   e.printStackTrace();  
                               }  
                               break;  
                       }  
                   }  
              } else if(BluetoothDevice.ACTION_BOND_STATE_CHANGED.equals(action)) {  
                   // 状态改变的广播   
                   BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);  
                   if (device.getName().equalsIgnoreCase(name)) {   
                       connectState = device.getBondState();  
                       switch (connectState) {  
                           case BluetoothDevice.BOND_NONE:  
                               break;  
                           case BluetoothDevice.BOND_BONDING:  
                               break;  
                           case BluetoothDevice.BOND_BONDED:  
                               try {  
                                   // 连接   
                                   connect(device);  
                               } catch (IOException e) {  
                                   e.printStackTrace();  
                               }  
                               break;  
                       }  
                   
               }  
         } 
	}

}
